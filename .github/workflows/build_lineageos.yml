name: Build LineageOS with GApps for Moto G8 Plus

# This workflow builds LineageOS with Google Apps for the Moto G8 Plus (doha/amogus_doha)
# It uses GitHub Actions to perform the build in the cloud

on:
  workflow_dispatch:
    inputs:
      DEVICE_NAME:
        description: 'Device codename'
        required: true
        default: 'amogus_doha'
        type: string
      BUILD_TYPE:
        description: 'Build type (lineage or gapps)'
        required: true
        default: 'gapps'
        type: choice
        options:
          - lineage
          - gapps
      LINEAGE_BRANCH:
        description: 'LineageOS branch'
        required: true
        default: 'lineage-22.0'
        type: choice
        options:
          - lineage-22.0
          - lineage-22.1
          - lineage-22.2
      DEVICE_TREE_URL:
        description: 'Device tree repository URL'
        required: true
        default: 'https://github.com/Aldair69/android_device_motorola_amogus_doha'
      DEVICE_TREE_BRANCH:
        description: 'Device tree branch'
        required: true
        default: 'lineage-22'
      KERNEL_SOURCE_URL:
        description: 'Kernel source repository URL'
        required: true
        default: 'https://github.com/Aldair69/android_kernel_motorola_msm-4.14'
      KERNEL_SOURCE_BRANCH:
        description: 'Kernel source branch'
        required: true
        default: 'lineage-22'
      VENDOR_SOURCE_URL:
        description: 'Vendor source repository URL'
        required: true
        default: 'https://github.com/Aldair69/android_vendor_motorola_amogus_doha'
      VENDOR_SOURCE_BRANCH:
        description: 'Vendor source branch'
        required: true
        default: 'lineage-22'

# Prevent concurrent builds of the same workflow on the same branch
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Build LineageOS ROM
    runs-on: ubuntu-24.04
    timeout-minutes: 1440  # 24 hours max

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Set up build environment
        run: |
          sudo apt-get update
          sudo apt-get install -y bc bison build-essential ccache curl flex g++-multilib gcc-multilib git gnupg gperf imagemagick \
            lib32ncurses5-dev lib32readline-dev lib32z1-dev liblz4-tool libncurses5 libncurses5-dev libsdl1.2-dev libssl-dev \
            libxml2 libxml2-utils lzop pngcrush rsync schedtool squashfs-tools xsltproc zip zlib1g-dev python-is-python3 repo
          echo "Build environment set up successfully"

      - name: Set up ccache
        uses: hendrikmuhs/ccache-action@v1.2
        with:
          max-size: 15G
          key: ccache-${{ github.workflow }}-${{ github.job }}-${{ github.ref }}-${{ github.sha }}
          restore-keys: |
            ccache-${{ github.workflow }}-${{ github.job }}-${{ github.ref }}
            ccache-${{ github.workflow }}-${{ github.job }}

      - name: Initialize repo
        run: |
          mkdir -p ~/android/lineage
          cd ~/android/lineage
          repo init -u https://github.com/LineageOS/android.git -b ${{ github.event.inputs.LINEAGE_BRANCH }}
          echo "Repo initialized with branch: ${{ github.event.inputs.LINEAGE_BRANCH }}"

      - name: Create local manifests
        run: |
          mkdir -p ~/android/lineage/.repo/local_manifests

          # Create device manifest
          cat > ~/android/lineage/.repo/local_manifests/doha.xml << EOF
          <?xml version="1.0" encoding="UTF-8"?>
          <manifest>
            <!-- Device Tree -->
            <project name="${{ github.event.inputs.DEVICE_TREE_URL }}" path="device/motorola/amogus_doha" remote="github" revision="${{ github.event.inputs.DEVICE_TREE_BRANCH }}" />

            <!-- Kernel -->
            <project name="${{ github.event.inputs.KERNEL_SOURCE_URL }}" path="kernel/motorola/msm-4.14" remote="github" revision="${{ github.event.inputs.KERNEL_SOURCE_BRANCH }}" />

            <!-- Vendor Blobs -->
            <project name="${{ github.event.inputs.VENDOR_SOURCE_URL }}" path="vendor/motorola/amogus_doha" remote="github" revision="${{ github.event.inputs.VENDOR_SOURCE_BRANCH }}" />

            <!-- Common Device Tree -->
            <project name="moto-common/android_device_motorola_common" path="device/motorola/common" remote="github" revision="lineage-22" />
          </manifest>
          EOF

          # Create GApps manifest if needed
          if [ "${{ github.event.inputs.BUILD_TYPE }}" = "gapps" ]; then
            cat > ~/android/lineage/.repo/local_manifests/gapps.xml << EOF
          <?xml version="1.0" encoding="UTF-8"?>
          <manifest>
            <remote name="gitlab" fetch="https://gitlab.com/" />
            <project path="vendor/gapps" name="MindTheGapps/vendor_gapps" remote="gitlab" revision="android-15.0" />
          </manifest>
          EOF
          fi

          echo "Local manifests created successfully"

      - name: Sync repositories
        run: |
          cd ~/android/lineage
          repo sync -c -j$(nproc --all) --force-sync --no-clone-bundle --no-tags
          echo "Repositories synced successfully"
        continue-on-error: false

      - name: Display LineageOS version
        run: |
          cd ~/android/lineage
          echo "Building LineageOS branch: ${{ github.event.inputs.LINEAGE_BRANCH }}"
          echo "This will build the latest version available in this branch"
          echo "Device: ${{ github.event.inputs.DEVICE_NAME }}"
          echo "Build type: ${{ github.event.inputs.BUILD_TYPE }}"

      - name: Modify device configuration for GApps
        if: github.event.inputs.BUILD_TYPE == 'gapps'
        run: |
          cd ~/android/lineage
          # Add GApps to device configuration
          echo '# Include GApps' >> device/motorola/amogus_doha/lineage_amogus_doha.mk
          echo '$(call inherit-product, vendor/gapps/arm64/arm64-vendor.mk)' >> device/motorola/amogus_doha/lineage_amogus_doha.mk
          echo "Device configuration modified to include GApps"

      - name: Set up build environment
        run: |
          cd ~/android/lineage
          source build/envsetup.sh
          breakfast ${{ github.event.inputs.DEVICE_NAME }}
          echo "Build environment set up for ${{ github.event.inputs.DEVICE_NAME }}"

      - name: Build ROM
        run: |
          cd ~/android/lineage
          export USE_CCACHE=1
          export CCACHE_EXEC=/usr/bin/ccache
          ccache -M 50G
          # Set official build flag to include Updater app
          export OFFICIAL_BUILD=true
          # Build with all available cores
          mka bacon -j$(nproc --all)
          echo "ROM build completed"

      - name: Find ROM file
        id: find-rom
        run: |
          cd ~/android/lineage
          ROM_FILE=$(find out/target/product/${{ github.event.inputs.DEVICE_NAME }} -name "lineage-*.zip" | head -1)
          echo "ROM file found: $ROM_FILE"
          echo "rom_file=$ROM_FILE" >> $GITHUB_OUTPUT

          # Also find recovery image
          RECOVERY_IMG=$(find out/target/product/${{ github.event.inputs.DEVICE_NAME }} -name "boot.img" | head -1)
          echo "Recovery image found: $RECOVERY_IMG"
          echo "recovery_img=$RECOVERY_IMG" >> $GITHUB_OUTPUT

      - name: Upload ROM as artifact
        uses: actions/upload-artifact@v4
        with:
          name: lineage-rom-${{ github.event.inputs.DEVICE_NAME }}
          path: ${{ steps.find-rom.outputs.rom_file }}
          retention-days: 7

      - name: Upload recovery image as artifact
        uses: actions/upload-artifact@v4
        with:
          name: recovery-${{ github.event.inputs.DEVICE_NAME }}
          path: ${{ steps.find-rom.outputs.recovery_img }}
          retention-days: 7

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            ${{ steps.find-rom.outputs.rom_file }}
            ${{ steps.find-rom.outputs.recovery_img }}
          tag_name: lineage-${{ github.run_number }}
          name: LineageOS ${{ github.event.inputs.LINEAGE_BRANCH }} for ${{ github.event.inputs.DEVICE_NAME }}
          body: |
            # LineageOS ${{ github.event.inputs.LINEAGE_BRANCH }} for ${{ github.event.inputs.DEVICE_NAME }}

            **Build Information:**
            - Build date: ${{ github.event.repository.updated_at }}
            - Build type: ${{ github.event.inputs.BUILD_TYPE }}
            - Branch: ${{ github.event.inputs.LINEAGE_BRANCH }}
            - Device: ${{ github.event.inputs.DEVICE_NAME }}

            **Installation Instructions:**
            1. Boot into recovery mode
            2. Perform a factory reset (wipe data/factory reset)
            3. Flash the ROM zip file
            4. Reboot your device

            **Note:** This is an unofficial build. Use at your own risk.
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

      - name: Send Telegram Notification
        if: success()
        env:
          TG_TOKEN: ${{ secrets.TG_TOKEN }}
          TG_CHAT_ID: ${{ secrets.TG_CHAT_ID }}
        run: |
          if [ -n "$TG_TOKEN" ] && [ -n "$TG_CHAT_ID" ]; then
            curl -s -X POST https://api.telegram.org/bot$TG_TOKEN/sendMessage \
              -d chat_id=$TG_CHAT_ID \
              -d text="âœ… LineageOS ${{ github.event.inputs.LINEAGE_BRANCH }} with GApps for ${{ github.event.inputs.DEVICE_NAME }} build completed! Download from: https://github.com/${{ github.repository }}/releases/tag/lineage-${{ github.run_number }}"
          fi
